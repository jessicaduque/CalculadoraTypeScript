name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout do cÃ³digo
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Configurar Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: 'npm'

    # 3. Instalar dependÃªncias
    - name: Install dependencies
      run: npm install

    # 4. Rodar os testes unitÃ¡rios
    - name: Run tests
      run: npm test

    # 5. Analisar a qualidade do cÃ³digo com Sonar
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@v2
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.organization=jessicaduque
          -Dsonar.projectKey=jessicaduque_CalculadoraTypeScript
          -Dsonar.sources=src

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
    # 1. Checkout do cÃ³digo
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Configurar Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: 'npm'

    # 3. Publicar no npm
    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    # # 4. Notificar no Discord
    # - name: Notify Discord
    #   uses: Ilshidur/action-discord@v2
    #   with:
    #     webhook: ${{ secrets.DISCORD_WEBHOOK }}
    #     message: "ðŸš€ Uma nova versÃ£o da calculadora foi publicada no npm!"
